"use strict";(self.webpackChunktailcall_run=self.webpackChunktailcall_run||[]).push([[261],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3571:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=n(7462),a=n(7294),i=n(3905),o=n(2578);const l={title:"Quick Start",sidebar_position:1,label:"Quick Start"},s=void 0,p={unversionedId:"intro/quickstart",id:"intro/quickstart",title:"Quick Start",description:"Requirements",source:"@site/docs/intro/quickstart.mdx",sourceDirName:"intro",slug:"/intro/quickstart",permalink:"/docs/intro/quickstart",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro/quickstart.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Quick Start",sidebar_position:1,label:"Quick Start"},sidebar:"tutorialSidebar",next:{title:"Problem Statement",permalink:"/docs/"}},c={},u=[{value:"Requirements",id:"requirements",level:3},{value:"Installation",id:"installation",level:3},{value:"Homebrew",id:"homebrew",level:4},{value:"Compose REST apis into a GraphQL schema",id:"compose-rest-apis-into-a-graphql-schema",level:3},{value:"Create the schema definition",id:"create-the-schema-definition",level:4},{value:"Register the schema definition with the server",id:"register-the-schema-definition-with-the-server",level:4},{value:"Query the registered schema",id:"query-the-registered-schema",level:4}],h={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"To install Tailcall, ensure that your system is equipped with ",(0,i.kt)("strong",{parentName:"p"},"Java 20")," or a newer version. You can refer to the setup instructions provided by ",(0,i.kt)("a",{parentName:"p",href:"https://sdkman.io/jdks#tem"},"sdkman")," to correctly install and configure Java on your system."),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)(a.Fragment,null,"You can install the latest version -",(0,i.kt)("b",null," ",o.yT),", by using one of the following methods:"),(0,i.kt)("h4",{id:"homebrew"},"Homebrew"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If you don't already have Homebrew installed, you can find the instructions ",(0,i.kt)("a",{parentName:"li",href:"https://brew.sh/"},"here"),"."),(0,i.kt)("li",{parentName:"ol"},"Add the Tailcall repository to Homebrew by running the following command in your terminal:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"brew tap tailcallhq/tailcall\nbrew install tailcall\n"))),(0,i.kt)("li",{parentName:"ol"},"Verify that Tailcall is installed correctly by running:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"tc\n"))),(0,i.kt)("li",{parentName:"ol"},"To start the Tailcall server, execute the following command:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"tc-server\n")),"This will initiate the server at ",(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:8080/graphql"),".")),(0,i.kt)("p",null,"If you're interested in exploring other installation methods, refer to our ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/installation"},"installation guide")," for detailed instructions."),(0,i.kt)("h3",{id:"compose-rest-apis-into-a-graphql-schema"},"Compose REST apis into a GraphQL schema"),(0,i.kt)("p",null,"For our first example, we are going to compose a graphQL schema from the REST apis at ",(0,i.kt)("a",{href:"https://jsonplaceholder.typicode.com/",target:"_blank"},(0,i.kt)("a",{parentName:"p",href:"https://jsonplaceholder.typicode.com/"},"https://jsonplaceholder.typicode.com/")),", a free online REST api with some fake data.\nWe will use the api at ",(0,i.kt)("inlineCode",{parentName:"p"},"https://jsonplaceholder.typicode.com/users")," to get a list of users, and ",(0,i.kt)("inlineCode",{parentName:"p"},"https://jsonplaceholder.typicode.com/users/:id/posts")," to get the posts for each user, and compose them into a single GraphQL schema."),(0,i.kt)("h4",{id:"create-the-schema-definition"},"Create the schema definition"),(0,i.kt)("p",null,"Create a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"jsonplaceholder.graphql")," and paste the following contents into it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"showLineNumbers",showLineNumbers:!0},'# Specify a base url for all http requests\nschema @server(baseURL: "http://jsonplaceholder.typicode.com") {\n  query: Query\n}\n\ntype Query {\n  # Specify the http path for the users query\n  users: [User] @http(path: "/users")\n}\n\n# Create a user type with the fields returned by the users api\ntype User {\n  id: Int!\n  name: String!\n  username: String!\n  email: String!\n  email: String!\n\n  # Extend the user type with the posts field\n  # Use the current user\'s id to construct the path\n  posts: [Post] @http(path: "/users/{{value.id}}/posts")\n}\n\n# Create a post type with the fields returned by the posts api\ntype Post {\n  id: Int!\n  title: String!\n  body: String!\n}\n')),(0,i.kt)("p",null,"The above file is a standard ",(0,i.kt)("inlineCode",{parentName:"p"},".graphQL")," file, with a few additions such as ",(0,i.kt)("inlineCode",{parentName:"p"},"@server")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"@http")," directives. So basically we specify the graphQL schema and how to resolve that graphQL schema in the same file, without having to write any code! Here is a quick overview of what the above schema does:"),(0,i.kt)("h4",{id:"register-the-schema-definition-with-the-server"},"Register the schema definition with the server"),(0,i.kt)("p",null,"Now, again in the ",(0,i.kt)("inlineCode",{parentName:"p"},"bin")," directory, run the following command to register this schema with the server. Specify the full path to the ",(0,i.kt)("inlineCode",{parentName:"p"},"jsonplaceholder.graphql")," file that you created above."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"tc publish jsonplaceholder.graphql\n")),(0,i.kt)("p",null,"If the command succeeds, you should see output like the following below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"Deployment was completed successfully.\nDigest:     4ee03fde640e2f4c3e65c570971cc8b9ef6964926a79eed884eca6f864a43165\nEndpoints:  2\nUnsafe:     0\nPlayground: http://cloud.tailcall.run/graphql/4ee03fde640e2f4c3e65c570971cc8b9ef6964926a79eed884eca6f864a43165.\nN + 1:      1\n")),(0,i.kt)("p",null,"The server registers the schema and prints out a load of meta information. We will cover those in detail in a bit for now open the ",(0,i.kt)("strong",{parentName:"p"},"playground URL")," in a new tab in your browser and try it out for yourself!"),(0,i.kt)("h4",{id:"query-the-registered-schema"},"Query the registered schema"),(0,i.kt)("p",null,"Let's try the following query, to get all the users and the title of each post of each user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"showLineNumbers",showLineNumbers:!0},"query {\n  users {\n    id\n    name\n    posts {\n      title\n    }\n  }\n}\n")),(0,i.kt)("p",null,"You should see output like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "data": {\n    "users": [\n      {\n        "id": 1,\n        "name": "Leanne Graham",\n        "posts": [\n          {\n            "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit"\n          },\n          ...\n        ]\n      },\n      {\n        "id": 2,\n        "name": "Ervin Howell",\n        "posts": [\n          {\n            "title": "et ea vero quia laudantium autem"\n          },\n          {\n            "title": "in quibusdam tempore odit est dolorem"\n          },\n          ...\n        ]\n      }\n    ]\n  }\n}\n')),(0,i.kt)("p",null,"You can now add additional fields, and compose more queries together!"))}m.isMDXComponent=!0},2578:e=>{e.exports={yT:"v0.5.0"}}}]);