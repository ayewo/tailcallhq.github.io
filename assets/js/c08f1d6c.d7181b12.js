"use strict";(self.webpackChunktailcall_run=self.webpackChunktailcall_run||[]).push([[920],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(h,i(i({ref:t},p),{},{components:r})):a.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7227:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const l={title:"Server",sidebar_position:7},i=void 0,o={unversionedId:"intro/server",id:"intro/server",title:"Server",description:"The TailCall Server acts as an API Gateway for GraphQL. We can configure the server by passing cli options and we can publish various graphql configuration aka [composition specs]. To understand how the gateway works in detail refer the [architecture] document.",source:"@site/docs/intro/server.md",sourceDirName:"intro",slug:"/intro/server",permalink:"/docs/intro/server",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro/server.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Server",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/docs/intro/cli"},next:{title:"Tackling N + 1",permalink:"/docs/guides/n+1"}},s={},u=[{value:"Launch",id:"launch",level:2},{value:"Configuration",id:"configuration",level:2},{value:"--port",id:"--port",level:3},{value:"--admin-port",id:"--admin-port",level:3},{value:"--timeout",id:"--timeout",level:3},{value:"--http-cache",id:"--http-cache",level:3},{value:"--tracing",id:"--tracing",level:3},{value:"--slow-query",id:"--slow-query",level:3},{value:"--db",id:"--db",level:3},{value:"--db-host",id:"--db-host",level:3},{value:"--db-port",id:"--db-port",level:3},{value:"--db-username",id:"--db-username",level:3},{value:"--db-password",id:"--db-password",level:3},{value:"--persisted-queries",id:"--persisted-queries",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The TailCall Server acts as an API Gateway for GraphQL. We can configure the server by passing cli options and we can publish various graphql configuration aka ",(0,n.kt)("a",{parentName:"p",href:"/docs/intro/architecture#composition-specification-blueprint"},"composition specs"),". To understand how the gateway works in detail refer the ",(0,n.kt)("a",{parentName:"p",href:"/docs/intro/architecture"},"architecture")," document."),(0,n.kt)("h2",{id:"launch"},"Launch"),(0,n.kt)("p",null,"To start the server, use the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server [options]\n")),(0,n.kt)("p",null,"By default, the server starts on port 8080."),(0,n.kt)("h2",{id:"configuration"},"Configuration"),(0,n.kt)("p",null,"The TailCall Server provides various options to fine-tune its operation. These options control a variety of settings, including the server port, response timeouts, tracing, slow query thresholds, and more. Detailed descriptions and usage instructions for these options are provided in the ",(0,n.kt)("a",{parentName:"p",href:"#options"},"Options section"),"."),(0,n.kt)("h3",{id:"--port"},"--port"),(0,n.kt)("p",null,"Sets the port number for the server."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Integer"),(0,n.kt)("li",{parentName:"ul"},"Default: 8080")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --port 8081\n")),(0,n.kt)("h3",{id:"--admin-port"},"--admin-port"),(0,n.kt)("p",null,"Sets the admin-port number for the server. This port is used by the CLI to publish configuration on the server, without restarting it. The default value is ",(0,n.kt)("inlineCode",{parentName:"p"},"1+[port]")," that's provided. For eg: If the port is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"8080")," the admin port will be on ",(0,n.kt)("inlineCode",{parentName:"p"},"8081"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Integer"),(0,n.kt)("li",{parentName:"ul"},"Default: 8081")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --admin-port 8081\n")),(0,n.kt)("h3",{id:"--timeout"},"--timeout"),(0,n.kt)("p",null,"Sets the global response timeout for the server."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Integer (representing milliseconds)"),(0,n.kt)("li",{parentName:"ul"},"Default: 10000 (10 seconds)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --timeout 5000\n")),(0,n.kt)("h3",{id:"--http-cache"},"--http-cache"),(0,n.kt)("p",null,"Sets the HTTP cache size. This is an optional setting, by default caching is disabled on the server."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Integer"),(0,n.kt)("li",{parentName:"ul"},"Optional"),(0,n.kt)("li",{parentName:"ul"},"Default: None")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --http-cache 500\n")),(0,n.kt)("h3",{id:"--tracing"},"--tracing"),(0,n.kt)("p",null,"Enables or disables tracing."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Boolean"),(0,n.kt)("li",{parentName:"ul"},"Default: false")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --tracing\n")),(0,n.kt)("h3",{id:"--slow-query"},"--slow-query"),(0,n.kt)("p",null,"Sets the slow query duration limit."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Integer (representing milliseconds)"),(0,n.kt)("li",{parentName:"ul"},"Optional"),(0,n.kt)("li",{parentName:"ul"},"Default: None")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --slow-query 2000\n")),(0,n.kt)("h3",{id:"--db"},"--db"),(0,n.kt)("p",null,"Enables or disables database connectivity. By default the server uses an in-memory implementation which lives as long as the server is up. The database is required to keep a record of the published configurations."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Boolean"),(0,n.kt)("li",{parentName:"ul"},"Default: false")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --db\n")),(0,n.kt)("h3",{id:"--db-host"},"--db-host"),(0,n.kt)("p",null,"Sets the database host."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: String"),(0,n.kt)("li",{parentName:"ul"},'Default: "localhost"')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'tc-server --db-host "localhost"\n')),(0,n.kt)("h3",{id:"--db-port"},"--db-port"),(0,n.kt)("p",null,"Sets the database port."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Integer"),(0,n.kt)("li",{parentName:"ul"},"Default: 3306")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --db-port 3307\n")),(0,n.kt)("h3",{id:"--db-username"},"--db-username"),(0,n.kt)("p",null,"Sets the database username."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: String"),(0,n.kt)("li",{parentName:"ul"},"Optional"),(0,n.kt)("li",{parentName:"ul"},'Default: "tailcall_main_user"')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'tc-server --db-username "new_user"\n')),(0,n.kt)("h3",{id:"--db-password"},"--db-password"),(0,n.kt)("p",null,"Sets the database password."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: String"),(0,n.kt)("li",{parentName:"ul"},"Optional"),(0,n.kt)("li",{parentName:"ul"},'Default: "tailcall"')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'tc-server --db-password "new_password"\n')),(0,n.kt)("h3",{id:"--persisted-queries"},"--persisted-queries"),(0,n.kt)("p",null,"Enables or disables persisted queries."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: Boolean"),(0,n.kt)("li",{parentName:"ul"},"Default: false")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tc-server --persisted-queries\n")),(0,n.kt)("p",null,"These options allow developers to fine-tune the TailCall server according to their requirements, providing a versatile platform for managing GraphQL configurations."))}d.isMDXComponent=!0}}]);